// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using WinesApi.Models;

namespace WinesApi.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:Collation", "en_US.utf8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.2")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("WinesApi.Models.Box", b =>
                {
                    b.Property<int>("Boxno")
                        .HasColumnType("integer")
                        .HasColumnName("boxno");

                    b.Property<string>("Size")
                        .HasColumnType("text")
                        .HasColumnName("size");

                    b.HasKey("Boxno")
                        .HasName("box_pkey");

                    b.ToTable("box");
                });

            modelBuilder.Entity("WinesApi.Models.Location", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int?>("Box")
                        .HasColumnType("integer")
                        .HasColumnName("box");

                    b.Property<short?>("Cellarversion")
                        .HasColumnType("smallint")
                        .HasColumnName("cellarversion");

                    b.Property<int?>("No")
                        .HasColumnType("integer")
                        .HasColumnName("no");

                    b.Property<int?>("Wineid")
                        .HasColumnType("integer")
                        .HasColumnName("wineid");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "Box" }, "location_box_fk");

                    b.HasIndex(new[] { "Wineid" }, "location_wineid_fk");

                    b.ToTable("location");
                });

            modelBuilder.Entity("WinesApi.Models.Region", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Region1")
                        .HasColumnType("text")
                        .HasColumnName("region");

                    b.HasKey("Id");

                    b.ToTable("region");
                });

            modelBuilder.Entity("WinesApi.Models.Vineyard", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Vineyard1")
                        .HasColumnType("text")
                        .HasColumnName("vineyard");

                    b.HasKey("Id");

                    b.ToTable("vineyard");
                });

            modelBuilder.Entity("WinesApi.Models.Winelist", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<short?>("Bottlesize")
                        .HasColumnType("smallint")
                        .HasColumnName("bottlesize");

                    b.Property<short?>("Drinkrangefrom")
                        .HasColumnType("smallint")
                        .HasColumnName("drinkrangefrom");

                    b.Property<short?>("Drinkrangeto")
                        .HasColumnType("smallint")
                        .HasColumnName("drinkrangeto");

                    b.Property<string>("Notes")
                        .HasColumnType("text")
                        .HasColumnName("notes");

                    b.Property<float?>("Percentalcohol")
                        .HasColumnType("real")
                        .HasColumnName("percentalcohol");

                    b.Property<decimal?>("Pricepaid")
                        .HasPrecision(7, 2)
                        .HasColumnType("numeric(7,2)")
                        .HasColumnName("pricepaid");

                    b.Property<short?>("Rating")
                        .HasColumnType("smallint")
                        .HasColumnName("rating");

                    b.Property<int?>("Regionid")
                        .HasColumnType("integer")
                        .HasColumnName("regionid");

                    b.Property<int?>("Vineyardid")
                        .HasColumnType("integer")
                        .HasColumnName("vineyardid");

                    b.Property<short?>("Vintage")
                        .HasColumnType("smallint")
                        .HasColumnName("vintage");

                    b.Property<string>("Winename")
                        .HasColumnType("text")
                        .HasColumnName("winename");

                    b.Property<int?>("Winetypeid")
                        .HasColumnType("integer")
                        .HasColumnName("winetypeid");

                    b.Property<short?>("Yearbought")
                        .HasColumnType("smallint")
                        .HasColumnName("yearbought");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "Regionid" }, "winelist_regionid_fk");

                    b.HasIndex(new[] { "Vineyardid" }, "winelist_vineyardid_fk");

                    b.HasIndex(new[] { "Winetypeid" }, "winelist_winetypeid_fkey");

                    b.ToTable("winelist");
                });

            modelBuilder.Entity("WinesApi.Models.Winetype", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Winetype1")
                        .HasColumnType("text")
                        .HasColumnName("winetype");

                    b.HasKey("Id");

                    b.ToTable("winetype");
                });

            modelBuilder.Entity("WinesApi.Models.Location", b =>
                {
                    b.HasOne("WinesApi.Models.Box", "BoxNavigation")
                        .WithMany("Locations")
                        .HasForeignKey("Box")
                        .HasConstraintName("location_box_fkey");

                    b.HasOne("WinesApi.Models.Winelist", "Wine")
                        .WithMany("Locations")
                        .HasForeignKey("Wineid")
                        .HasConstraintName("location_wineid_fkey");

                    b.Navigation("BoxNavigation");

                    b.Navigation("Wine");
                });

            modelBuilder.Entity("WinesApi.Models.Winelist", b =>
                {
                    b.HasOne("WinesApi.Models.Region", "Region")
                        .WithMany("Winelists")
                        .HasForeignKey("Regionid")
                        .HasConstraintName("winelist_regionid_fkey");

                    b.HasOne("WinesApi.Models.Vineyard", "Vineyard")
                        .WithMany("Winelists")
                        .HasForeignKey("Vineyardid")
                        .HasConstraintName("winelist_vineyardid_fkey");

                    b.HasOne("WinesApi.Models.Winetype", "Winetype")
                        .WithMany("Winelists")
                        .HasForeignKey("Winetypeid")
                        .HasConstraintName("winelist_winetypeid_fkey");

                    b.Navigation("Region");

                    b.Navigation("Vineyard");

                    b.Navigation("Winetype");
                });

            modelBuilder.Entity("WinesApi.Models.Box", b =>
                {
                    b.Navigation("Locations");
                });

            modelBuilder.Entity("WinesApi.Models.Region", b =>
                {
                    b.Navigation("Winelists");
                });

            modelBuilder.Entity("WinesApi.Models.Vineyard", b =>
                {
                    b.Navigation("Winelists");
                });

            modelBuilder.Entity("WinesApi.Models.Winelist", b =>
                {
                    b.Navigation("Locations");
                });

            modelBuilder.Entity("WinesApi.Models.Winetype", b =>
                {
                    b.Navigation("Winelists");
                });
#pragma warning restore 612, 618
        }
    }
}
